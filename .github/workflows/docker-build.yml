name: Push Build to Artifactory

on: 
 push:
    branches: [ "main" ]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Artifactory
        uses: docker/login-action@v1
        with:
          registry: ${{ vars.ARTIFACTORY_URL }}  # Your Artifactory URL
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ vars.ARTIFACTORY_URL }}/noam-docker-local/my-app:latest

      - name: Log out from Artifactory
        if: always()
        run: docker logout ${{ vars.ARTIFACTORY_URL }}


 #   steps:
 #   - uses: actions/checkout@v4
 #   - name: Build the Docker image
 #     run: | 
 #        docker build . --file Dockerfile --tag my-app
 #        docker run my-app
      
  upload:
   runs-on: ubuntu-latest
   needs: [ docker-build ]

   steps:
   - name: Setup JFrog CLI
     uses: jfrog/setup-jfrog-cli@v4
     env:
       JF_URL: ${{ vars.ARTIFACTORY_URL }}
       JF_ACCESS_TOKEN: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }} 

   - name: Run JFrog CLI
     run: |
       jf -v
       export SERVER_ID="test"
       jf rt ping

   - name: Push Build to Artifactory
     run: |
       echo "test1 file " > test1.txt
       jf rt upload "test1.txt" noam-generic-local
       
 # This action publishes the build information to Artifactory and deletes older builds
   - name: Build to Artifactory
     run: |
       export BUILD_NAME="noam-github-actions-build"
       export BUILD_MODULE="my-module"
       export BUILD_NUMBER="1"
       export PATH_TO_DIRECTORY="name/version/dates"
       jf rt build-publish $BUILD_NAME $BUILD_NUMBER
       echo "### Hello world! :rocket:" >> $GITHUB_STEP_SUMMARY
     
       jf rt bdi c --max-builds=1
